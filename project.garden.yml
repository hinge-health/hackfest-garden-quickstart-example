kind: Project
name: vote-demo-quickstart
defaultEnvironment: hackfest
dotIgnoreFiles: [.gitignore]

variables:
  postgres-username: postgres
  postgres-database: postgres
  postgres-password: postgres

  user-namespace: hackfest-${kebabCase(local.username)}
  hackfest-cluster-name: g4funa

environments:
  - name: local
    defaultNamespace: ${var.user-namespace}
    variables:
      base-hostname: ${var.user-namespace}.local
  - name: hackfest
    defaultNamespace: ${var.user-namespace}
    variables:
      base-hostname: "${var.user-namespace}.${var.hackfest-cluster-name}.k8s.hingehealth.dev"

providers:
  - name: local-kubernetes
    environments: [local]
    namespace: ${environment.namespace}
    defaultHostname: ${var.base-hostname}

  # You can use Garden with remote Kubernetes clusters as well. In fact, that's where it shines!
  # Please see our docs on using the (remote) Kubernetes plugin to learn how to configure
  # the values below.
  - name: kubernetes
    buildMode: kaniko
    environments: [hackfest]
    context: "${var.hackfest-cluster-name}"
    ingressClass: "external"
    kaniko:
      extraFlags:
        - --cache
        - --cache-repo=905652836327.dkr.ecr.us-west-1.amazonaws.com/garden/cache
        - --snapshotMode=redo
        - --use-new-run
      namespace: null
    tlsCertificates:
      - name: hackfest-external
        hostnames:
          - api-${var.base-hostname}
          - vote-${var.base-hostname}
        secretRef:
          name: tls-wildcard
          namespace: apps
    imagePullSecrets:
      - name: ecr-config
        namespace: default
      - name: docker-config
        namespace: default
    namespace: ${environment.namespace}
    defaultHostname: ${var.base-hostname}
